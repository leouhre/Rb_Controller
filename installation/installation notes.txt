- install Raspberry Pi OS on SD card
- rotate display in settings
- install virtual keyboard (sudo apt install matchbox-keyboard)
- setup virtual ip address (https://raspberrypi-guide.github.io/networking/set-up-static-ip-address)
  (virtual IP: 192.168.137.132)
- install python 3.10.4 (https://allurcode.com/install-latest-version-of-python-on-raspberry-pi/) DO NOT MAKE THE NEW VERSION DEFAULT
- virtual environment setup (https://docs.python.org/3/tutorial/venv.html) USE python3.10.4 to create environment
  REMEMBER TO ACTIVATE: source .venv/RbController/bin/activate
- git setup (git clone)
- update pip and install requirements.txt (from ~/Rb_Controller run pip install -r requirements.txt)
- I had to fix pip by going into ~/Python3.10.4/ and run './configure' then 'make' and then 'sudo make install' 
  and then re-run pip install requirements (this step takes ~1hr)
- In order to install matplotlib, run:
  sudo apt-get install libjpeg-dev
  sudo apt-get install zlib1g-dev
  sudo apt-get install libpng-dev
- pip install matplotlib
- follow the matlab setup (configure existing OS)
  some packages might not successfully install:
	userland
	wiringpi
	tornado
	nnpy
	py-nanomsg

%%% skip these steps 
- in matlab terminal: r = raspi("192.168.137.132","pi","raspberry") FAILS
- install userland manually (https://snapcraft.io/install/rpi-userland/raspbian)
- in matlab terminal: r = raspi("192.168.137.132","pi","raspberry") FAILS
- install nanomsg manually:
	cd ~/
	wget https://github.com/nanomsg/nanomsg/archive/refs/tags/1.2.tar.gz
	tar -xvzf 1.2.tar.gz
	cd nanomsg-1.2
	then follow instructions in README.md:
    % mkdir build
    % cd build
    % cmake ..
    % cmake --build .
    % ctest .
    % sudo cmake --build . --target install
    % sudo ldconfig (if on Linux)
- in matlab terminal: r = raspi("192.168.137.132","pi","raspberry") FAILS
- sudo pip install nnpy (remember to install on python3.9 and not the newly installed python3.10.4)
%%% 

- install userland manually (https://snapcraft.io/install/rpi-userland/raspbian)
- in ~/opt/ run: sudo git clone https://github.com/raspberrypi/userland 
  and then in matlab: raspi.internal.updateServer('192.168.137.132','pi','raspberry') 
  (https://se.mathworks.com/matlabcentral/answers/1599884-not-able-to-install-userland-wiringpi-in-rasi-via-matlab-support-package-for-raspi)
- in matlab, test that everything works: r = raspi("192.168.137.132","pi","raspberry")
- now try: system(r,'export DISPLAY=:0 & ~/.venv/RbController/bin/python3 ~/Rb_Controller/main.py');
	possible errors:
		check that pathes are correct
		check that ~/.venv/RbController/bin/python3 actually points to python3.10.4. If not, run
			cd ~/.venv/RbController/bin
			sudo rm python3
			sudo ln -s /usr/local/bin/python3.10 python3